{"version":3,"sources":["C:/Users/Saurabh/Desktop/Interview Prep/cryptoverse-react-app/src/components/LineChart.jsx","C:/Users/Saurabh/Desktop/Interview Prep/cryptoverse-react-app/src/pages/crypto-details/index.js"],"names":["Title","Typography","LineChart","_ref","_coinHistory$data5","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","_coinHistory$data","data","_coinHistory$data$his","history","length","_coinHistory$data2","push","price","_coinHistory$data3","_coinHistory$data3$hi","_coinHistory$data4","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","_jsxs","_Fragment","children","Row","className","level","Col","change","_jsx","Line","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","_data$data","_cryptoDetails$allTim","_cryptoDetails$allTim2","_cryptoDetails$supply","_cryptoDetails$supply2","_cryptoDetails$supply3","_cryptoDetails$supply4","_cryptoDetails$supply5","_data$data2","_data$data3","_cryptoDetails$links","coinId","useParams","timeperiod","setTimeperiod","useState","isFetching","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","cryptoDetails","coin","Loader","stats","title","value","concat","millify","icon","DollarCircleOutlined","rank","NumberOutlined","volume","ThunderboltOutlined","marketCap","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","FundOutlined","numberOfExchanges","MoneyCollectOutlined","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","total","circulating","name","symbol","defaultValue","placeholder","onChange","map","date","_ref2","HTMLReactParser","description","links","link","type","href","url","target","rel"],"mappings":"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","file":"static/js/8.9d053a15.chunk.js","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()\n    );\n  }\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: \"Price In USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\",\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart{\" \"}\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            Change: {coinHistory?.data?.change}%\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: $ {currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from \"../../services/cryptoApi\";\r\nimport Loader from \"../../components/Loader\";\r\nimport LineChart from \"../../components/LineChart\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timeperiod, setTimeperiod] = useState(\"7d\");\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timeperiod,\r\n  });\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails?.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails?.volume && millify(cryptoDetails?.volume)}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${\r\n        cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)\r\n      }`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${\r\n        cryptoDetails?.allTimeHigh?.price &&\r\n        millify(cryptoDetails?.allTimeHigh?.price)\r\n      }`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails?.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails?.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails?.supply?.confirmed ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${\r\n        cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)\r\n      }`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${\r\n        cryptoDetails?.supply?.circulating &&\r\n        millify(cryptoDetails?.supply?.circulating)\r\n      }`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.symbol}) Price\r\n        </Title>\r\n        <p>\r\n          {cryptoDetails.name} live price in US Dollar (USD). View value\r\n          statistics, market cap and supply.\r\n        </p>\r\n      </Col>\r\n      <Select\r\n        defaultValue=\"7d\"\r\n        className=\"select-timeperiod\"\r\n        placeholder=\"Select Timeperiod\"\r\n        onChange={(value) => setTimeperiod(value)}\r\n      >\r\n        {time.map((date) => (\r\n          <Option key={date}>{date}</Option>\r\n        ))}\r\n      </Select>\r\n      <LineChart\r\n        coinHistory={coinHistory}\r\n        currentPrice={millify(cryptoDetails?.price)}\r\n        coinName={cryptoDetails?.name}\r\n      />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              {cryptoDetails.name} Value Statistics\r\n            </Title>\r\n            <p>\r\n              An overview showing the statistics of {cryptoDetails.name}, such\r\n              as the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\" key={title}>\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              Other Stats Info\r\n            </Title>\r\n            <p>\r\n              An overview showing the statistics of {cryptoDetails.name}, such\r\n              as the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\" key={title}>\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            What is {cryptoDetails.name}?\r\n          </Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            {cryptoDetails.name} Links\r\n          </Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">\r\n                {link.type}\r\n              </Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                {link.name}\r\n              </a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/Loader.jsx","images/cryptocurrency.png","components/Navbar.jsx","components/Footer.js","App.js","services/cryptoNewsApi.js","app/store.js","index.js","services/cryptoApi.js"],"names":["Loader","_jsx","className","children","Spin","Navbar","activeMenu","setActiveMenu","useState","screenSize","setScreenSize","undefined","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","_jsxs","Avatar","src","icon","size","Typography","Title","level","Link","to","Button","onClick","MenuOutlined","Menu","theme","Item","HomeOutlined","FundOutlined","Footer","style","color","textAlign","Space","Homepage","lazy","Cryptocurrencies","CryptoDetails","App","Layout","Suspense","fallback","Switch","Route","exact","path","cryptoNewsHeaders","process","cryptoNewsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptoNews","query","_ref","newsCategory","count","url","concat","headers","useGetCryptoNewsQuery","configureStore","reducer","cryptoApi","ReactDOM","render","React","StrictMode","Router","Provider","store","document","getElementById","cryptoApiHeaders","createRequest","getCryptos","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery"],"mappings":"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","file":"static/js/main.bee467b7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { HomeOutlined, FundOutlined, MenuOutlined } from \"@ant-design/icons\";\nimport icon from \"../images/cryptocurrency.png\";\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">Cryptoverse</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Space } from \"antd\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"footer\">\r\n        <Typography.Title\r\n          level={5}\r\n          style={{ color: \"white\", textAlign: \"center\" }}\r\n        >\r\n          Copyright Â© 2021\r\n          <Link to=\"/\">Cryptoverse Inc.</Link> <br />\r\n          All Rights Reserved.\r\n        </Typography.Title>\r\n        <Space>\r\n          <Link to=\"/\">Home</Link>\r\n        </Space>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Suspense, lazy } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport { Navbar, Loader, Footer } from \"./components\";\nimport \"./App.css\";\n\nconst Homepage = lazy(() => import(\"./pages/home\"));\nconst Cryptocurrencies = lazy(() => import(\"./pages/crypto-currencies\"));\nconst CryptoDetails = lazy(() => import(\"./pages/crypto-details\"));\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <Suspense fallback={<Loader />}>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n            </Switch>\n          </div>\n        </Suspense>\n      </Layout>\n\n      <Footer />\n    </div>\n  </div>\n);\n\nexport default App;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsHeaders = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-key\": process.env.REACT_APP_RAPIDAPI_KEY,\n  \"x-rapidapi-host\": process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_NEWS_API_URL }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport store from './app/store';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// Note: Change v1 to v2 on rapid api\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\n  \"x-rapidapi-key\": process.env.REACT_APP_RAPIDAPI_KEY,\n};\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n\n    // Note: Change the coin price history endpoint from this - `coin/${coinId}/history/${timeperiod} to this - `coin/${coinId}/history?timeperiod=${timeperiod}`\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) =>\n        createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`),\n    }),\n\n    // Note: To access this endpoint you need premium plan\n    getExchanges: builder.query({\n      query: () => createRequest(\"/exchanges\"),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n"],"sourceRoot":""}